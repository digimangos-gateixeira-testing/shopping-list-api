{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Shopping List API",
    "description": "API for managing items on a shopping list"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/items": {
      "get": {
        "summary": "List all items",
        "description": "Retrieve a list of all items",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new item",
        "description": "Create a new item with the provided details",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "item",
            "description": "Item to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item created successfully",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "summary": "Get an item by ID",
        "description": "Retrieve an item by its ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the item to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Item retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "put": {
        "summary": "Update an item by ID",
        "description": "Update an existing item by its ID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the item to update"
          },
          {
            "in": "body",
            "name": "item",
            "description": "Item data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an item by ID",
        "description": "Delete an existing item by its ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the item to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "unit": {
          "type": "string"
        },
        "purchased": {
          "type": "boolean"
        }
      }
    }
  }
}
